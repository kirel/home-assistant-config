- sensor:
    - name: "Daniel BLE"
      state: >
        {#  
        Use venu unless not_home - 
        then use iPhone unless not_home -
        then use mobile app
        #}

        {%- set room_names = {
                  'schlafzimmer' : 'Schlafzimmer',
                  'b_ro' : 'Büro',
                  'keller' : 'Keller',
                  'waschraum' : 'Waschraum',
                  'wohnzimmer' : 'Wohnzimmer',
                  'not_home' : 'not_home',
                  'home' : 'home'
               }
        -%}
        {% if not is_state("sensor.daniels_venu_2", "not_home") %}
          {{ room_names[states('sensor.daniels_venu_2')] }}
        {% elif not is_state("sensor.daniels_iphone", "not_home") %}
          {{ room_names[states('sensor.daniels_iphone')] }}
        {% else %}
          {{ room_names[states('device_tracker.iphone')] }}
        {% endif %}
    - name: "Count Lights On"
      state: >
        {% set domain = 'light' %}
        {% set state = 'on' %}
        {% set light_groups = states[domain] | selectattr('attributes.entity_id') | map(attribute='name') | list %}
        {% set lights_on = states[domain] | selectattr('state','eq', state) | selectattr('attributes.type', '!=', 'browser_mod') | map(attribute='name') | list %}
        {% set lights_on_cleaned = lights_on | reject('in', light_groups) | list %}
        {{ lights_on_cleaned | length }}
      unit_of_measurement: "on"
    - name: "Daniel's iPhone T"
      unique_id: daniels_iphone_t
      state: "{{ states('sensor.daniels_iphone') }}"
- binary_sensor:
    - name: "Monitor in use"
      unique_id: monitor_in_use
      state: >
        {{ states('sensor.monitor_power')|float > 5 }}
      icon: >
          {% if is_state("binary_sensor.monitor_in_use", "on") %}
            mdi:monitor
          {% else %}
            mdi:monitor-off
          {% endif %}
    - name: "Waschmaschine läuft"
      unique_id: waschmaschine_in_use
      delay_off:
          minutes: 5
      state: >
        {{ states('sensor.waschmaschine_current')|float > 1 }}
      icon: >
          {% if is_state("binary_sensor.waschmaschine_lauft", "on") %}
            mdi:washing-machine
          {% else %}
            mdi:washing-machine-off
          {% endif %}
    - name: vacuum needs emptying
      unique_id: vacuum_needs_emptying
      state: >
        {{ states('sensor.vacuum_cleaning_since_last_emptied')|int >= states('input_number.vacuum_empty_threshold')|int }}
      icon: >
          {% if is_state("binary_sensor.vacuum_needs_emptying", "on") %}
            mdi:delete-empty
          {% else %}
            mdi:delete-outline
          {% endif %}
