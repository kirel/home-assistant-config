- sensor:
    - name: "Daniel BLE"
      state: >
        {#  
        Use venu unless not_home - 
        then use iPhone unless not_home -
        then use mobile app
        #}

        {%- set room_names = {
                  'schlafzimmer' : 'Schlafzimmer',
                  'b_ro' : 'Büro',
                  'keller' : 'Keller',
                  'waschraum' : 'Waschraum',
                  'wohnzimmer' : 'Wohnzimmer',
                  'bad' : 'Bad',
                  'not_home' : 'not_home',
                  'home' : 'home'
               }
        -%}
        {% if not is_state("sensor.daniels_venu_2", "not_home") %}
          {{ room_names[states('sensor.daniels_venu_2')] }}
        {% elif not is_state("sensor.daniels_iphone", "not_home") %}
          {{ room_names[states('sensor.daniels_iphone')] }}
        {% else %}
          {{ room_names[states('device_tracker.iphone')] }}
        {% endif %}
    - name: "Kinderzimmer Temperaturbereich"
      state: >
        {% set temp = states('sensor.netatmo_wohnung_weather_station_schlafzimmer_temperature') | float %}
        {% if temp < 16 %}
          unter 16
        {% elif temp < 18 %}
          16-17
        {% elif temp < 20 %}
          18-19
        {% elif temp < 23 %}
          20-22
        {% elif temp < 25 %}
          23-24
        {% else %}
          über 25
        {% endif %}
    - name: "Draußen Temperaturbereich"
      state: >
        {% set temp = states('sensor.netatmo_wohnung_weather_station_draussen_temperature') | float %}
        {% if temp < 16 %}
          unter 16
        {% elif temp < 18 %}
          16-17
        {% elif temp < 20 %}
          18-19
        {% elif temp < 23 %}
          20-22
        {% elif temp < 25 %}
          23-24
        {% else %}
          über 25
        {% endif %}
    - name: "Vorhersage Temperaturbereich"
      state: >
        {% set temp = states('sensor.openweathermap_forecast_temperature') | float %}
        {% if temp < 16 %}
          unter 16
        {% elif temp < 18 %}
          16-17
        {% elif temp < 20 %}
          18-19
        {% elif temp < 23 %}
          20-22
        {% elif temp < 25 %}
          23-24
        {% else %}
          über 25
        {% endif %}
    - name: "Lights On"
      state: >
        {% set domain = 'light' %}
        {% set state = 'on' %}
        {% set excludes = expand('light.lichtzahler_ausschluss') | map(attribute='entity_id') | list %}
        {% set light_groups = states[domain] | selectattr('attributes.entity_id', 'defined') | map(attribute='entity_id') | list %}
        {% set kiosk = integration_entities('fullykiosk') | list %}
        {% set browser_mod = states[domain] | selectattr('attributes.type', 'defined') | selectattr('attributes.type', '==', 'browser_mod') | map(attribute='entity_id') %}
        {% set lights_on = states[domain] | selectattr('state','eq', state) | map(attribute='entity_id') | list %}
        {% set lights_on_cleaned = lights_on | reject('in', excludes) | reject('in', light_groups) | reject('in', kiosk) | reject('in', browser_mod) | list %}
        {{ lights_on_cleaned | list | join(', ') }}
    - name: "Count Lights On"
      state: >
        {% set domain = 'light' %}
        {% set state = 'on' %}
        {% set excludes = expand('light.lichtzahler_ausschluss') | map(attribute='entity_id') | list %}
        {% set light_groups = states[domain] | selectattr('attributes.entity_id', 'defined') | map(attribute='entity_id') | list %}
        {% set kiosk = integration_entities('fullykiosk') | list %}
        {% set browser_mod = states[domain] | selectattr('attributes.type', 'defined') | selectattr('attributes.type', '==', 'browser_mod') | map(attribute='entity_id') %}
        {% set lights_on = states[domain] | selectattr('state','eq', state) | map(attribute='entity_id') | list %}
        {% set lights_on_cleaned = lights_on | reject('in', excludes) | reject('in', light_groups) | reject('in', kiosk) | reject('in', browser_mod) | list %}
        {{ lights_on_cleaned | length }}
      unit_of_measurement: "on"
    - name: "Offene Fenster"
      state: >
        {{ expand('binary_sensor.fenster_und_turen') | selectattr('state', 'eq', 'on') | list | count }}
      unit_of_measurement: "offen"
    - name: "Sonnenwinkel"
      unit_of_measurement: "°"
      state: "{{ state_attr('sun.sun', 'azimuth') }}"
    - name: "Sonnenhöhe"
      unit_of_measurement: "°"
      state: "{{ state_attr('sun.sun', 'elevation') }}"
    - name: "Differenz Innen zu Außentemperatur"
      unit_of_measurement: "°C"
      state: "{{ states('sensor.wohnung_temperatur_mittelwert')|float - states('sensor.openweathermap_temperature')|float }}"
- binary_sensor:
    - name: vacuum needs emptying
      unique_id: vacuum_needs_emptying
      state: >
        {{ states('sensor.vacuum_cleaning_time_since_last_emptied')|int >= states('input_number.vacuum_empty_threshold')|int }}
      icon: >
          {% if is_state("binary_sensor.vacuum_needs_emptying", "on") %}
            mdi:delete-empty
          {% else %}
            mdi:delete-outline
          {% endif %}
    - name: inside warmer than outside
      unique_id: inside_warmer_than_outside
      state: >
        {{ states('sensor.wohnung_temperatur_mittelwert')|float > states('sensor.openweathermap_temperature')|float }}